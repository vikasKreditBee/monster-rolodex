{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","monster","id","name","email","CardList","state","monsters","this","map","Component","SearchBox","placeholder","handleChange","type","onChange","App","searchField","fetch","then","res","json","users","setState","filteredMonster","filter","toLowerCase","includes","e","target","value","console","log","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mTAceA,EAXF,SAACC,GAAD,OACX,sBAAKC,UAAU,iBAAf,UACE,qBACEC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,4BAEL,6BAAKJ,EAAMG,QAAQE,OACnB,4BAAIL,EAAMG,QAAQG,YCWPC,G,wDAfb,aAAc,IAAD,8BACX,gBACKC,MAAQ,CAACC,SAAS,IAFZ,E,0CAKb,WACE,OACE,qBAAKR,UAAU,YAAf,SACGS,KAAKV,MAAMS,SAASE,KAAI,SAACR,GACtB,OAAO,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,a,GAVfQ,cCFVC,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,aAAf,OACvB,qBAAKd,UAAU,SAAf,SACE,uBAAOe,KAAK,SAASF,YAAaA,EAAaG,SAAUF,QCoC9CG,E,kDAlCb,aAAe,IAAD,8BACZ,gBACKV,MAAQ,CAAEC,SAAU,GAAIU,YAAa,IAF9B,E,qDAKd,WAAqB,IAAD,OAClBC,MAAM,8CACHC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GAAD,OAAW,EAAKC,SAAS,CAAEhB,SAAUe,S,oBAG/C,WAAU,IAAD,OACP,EAAkCd,KAAKF,MAA/BC,EAAR,EAAQA,SAAUU,EAAlB,EAAkBA,YACZO,EAAkBjB,EAASkB,QAAO,SAACxB,GAAD,OACtCA,EAAQE,KAAKuB,cAAcC,SAASV,EAAYS,kBAGlD,OACE,sBAAK3B,UAAU,MAAf,UACA,iDACE,cAAC,EAAD,CACEa,YAAY,iBACZC,aAAc,SAACe,GACb,EAAKL,SAAS,CAAEN,YAAaW,EAAEC,OAAOC,QAAS,WAC7CC,QAAQC,IAAI,EAAK1B,aAIvB,cAAC,EAAD,CAAUC,SAAUiB,W,GA7BVd,aCOHuB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.ed51a1ee.chunk.js","sourcesContent":["import { Component } from \"react\";\nimport \"./card.styles.css\";\n\nconst Card = (props) => (\n  <div className=\"card-container\">\n    <img\n      src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}\n    />\n    <h2>{props.monster.name}</h2>\n    <p>{props.monster.email}</p>\n  </div>\n);\n\n\nexport default Card;","import { Component } from 'react';\nimport Card from '../card/card.component';\nimport './card-list.styles.css';\n\nclass CardList extends Component {\n  constructor(){\n    super();\n    this.state = {monsters:[]}\n  }\n\n  render(){\n    return (\n      <div className=\"card-list\">\n        {this.props.monsters.map((monster) => {\n            return <Card key={monster.id} monster={monster}/>;\n        })}\n      </div>\n    )}\n}\n\nexport default CardList;\n","import { Component } from \"react\";\nimport './search-box.styles.css';\nexport const SearchBox = ({placeholder, handleChange}) => (\n  <div className=\"search\">\n    <input type=\"search\" placeholder={placeholder} onChange={handleChange}   />\n  </div>\n);\n\nexport default SearchBox;\n","import \"./App.css\";\nimport { Component } from \"react\";\nimport CardList from \"./components/card-list/card-list.component\";\nimport { SearchBox } from \"./components/search-box/search-box.component\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = { monsters: [], searchField: \"\" };\n  }\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((res) => res.json())\n      .then((users) => this.setState({ monsters: users }));\n  }\n\n  render() {\n    const { monsters, searchField } = this.state;\n    const filteredMonster = monsters.filter((monster) =>\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n\n    return (\n      <div className=\"App\">\n      <h1>Monster Rolodex</h1>\n        <SearchBox\n          placeholder=\"search monster\"\n          handleChange={(e) => {\n            this.setState({ searchField: e.target.value }, () => {\n              console.log(this.state);\n            });\n          }}\n        />\n        <CardList monsters={filteredMonster} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}